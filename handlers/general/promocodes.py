from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

from utils.database import get_user_data, save_user_data, update_balance

import json
import os

router = Router()

PROMO_PATH = "data/promocodes.json"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤, —è–∫—â–æ —Ñ–∞–π–ª—É –Ω–µ–º–∞—î
os.makedirs("data", exist_ok=True)

if not os.path.exists(PROMO_PATH):
    default_promos = {
        "#newbot": {"reward": 1000, "uses_left": 100},
        "#newadmin": {"reward": 5000, "uses_left": 100},
        "#newgame": {"reward": 2000, "uses_left": 100}
    }
    with open(PROMO_PATH, "w") as f:
        json.dump(default_promos, f, indent=4)


@router.message(Command(commands=["–ø—Ä–æ–º–æ", "–ø—Ä–æ–º–æ–∫–æ–¥"]))
async def promo_command(message: Message):
    args = message.text.strip().split()

    if len(args) < 2:
        await message.answer("‚ùó –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /–ø—Ä–æ–º–æ–∫–æ–¥ #–∫–æ–¥")
        return

    code = args[1].strip().lower()
    if not code.startswith("#"):
        await message.answer("‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ `#`, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: /–ø—Ä–æ–º–æ–∫–æ–¥ #newgame")
        return

    user_id = str(message.from_user.id)

    user_data = await get_user_data(user_id)

    with open(PROMO_PATH, "r", encoding="utf-8") as f:
        promocodes = json.load(f)

    if code not in promocodes:
        await message.answer("‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    if code in user_data.get("used_promocodes", []):
        await message.answer("‚ö†Ô∏è –í–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ —Ü–µ–π –ø—Ä–æ–º–æ–∫–æ–¥")
        return

    promo = promocodes[code]
    if promo["uses_left"] <= 0:
        await message.answer("‚ö†Ô∏è –¶–µ–π –ø—Ä–æ–º–æ–∫–æ–¥ –≤–∂–µ –≤–∏—á–µ—Ä–ø–∞–Ω–æ")
        return

    reward = promo["reward"]
    await update_balance(user_id, reward)

    user_data.setdefault("used_promocodes", []).append(code)
    await save_user_data(user_id, user_data)

    promocodes[code]["uses_left"] -= 1
    with open(PROMO_PATH, "w", encoding="utf-8") as f:
        json.dump(promocodes, f, indent=4, ensure_ascii=False)

    new_balance = user_data.get("balance", 0) + reward

    await message.answer(
        f"‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ:</b> {code}\n"
        f"‚ûï –û—Ç—Ä–∏–º–∞–Ω–æ: {reward} –∫–æ—ñ–Ω—ñ–≤\n"
        f"üí∞ –ù–æ–≤–∏–π –±–∞–ª–∞–Ω—Å: {new_balance} –∫–æ—ñ–Ω—ñ–≤"
    )
