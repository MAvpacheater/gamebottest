import asyncio
from aiogram import Router, F
from aiogram.types import Message
from aiogram.enums.dice_emoji import DiceEmoji
from aiogram.filters import Command

from utils.game_utils import (
    get_user_name,
    parse_bet,
    update_balance,
    add_game_stat,
    send_message_with_balance,
    get_balance,  # ‚úÖ –Ω–µ –∑–∞–±—É–¥—å —ñ–º–ø–æ—Ä—Ç
)

router = Router()

@router.message(Command("–±–∞—Å–∫–µ—Ç–±–æ–ª"))
@router.message(F.text.lower().startswith("–±–∞—Å–∫–µ—Ç–±–æ–ª"))
async def basketball_handler(message: Message):
    user_id = message.from_user.id
    username = get_user_name(message.from_user)

    # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞–≤–∫—É
    args = message.text.split()
    if len(args) < 2:
        await message.reply("‚ùå –í–∫–∞–∂–∏ —Å—Ç–∞–≤–∫—É –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏. –ü—Ä–∏–∫–ª–∞–¥: /–±–∞—Å–∫–µ—Ç–±–æ–ª 100")
        return

    amount, error = await parse_bet(user_id, args[1])
    if error:
        await message.reply(error)
        return

    # –ö–∏–¥–∞—î–º–æ –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–∏–π –º'—è—á
    dice = await message.answer_dice(emoji=DiceEmoji.BASKETBALL)
    value = dice.dice.value

    # –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
    await asyncio.sleep(3.5)

    # –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    if value <= 2:
        multiplier = 0
        result_text = f"{username}, —Ç–∏ –ø—Ä–æ–º–∞—Ö–Ω—É–≤—Å—è! x0 üòß"
    elif value <= 4:
        multiplier = 1.5
        result_text = f"{username}, –∫–∏–¥–æ–∫ –±—É–≤ –Ω–∞ –º–µ–∂—ñ —Ñ–æ–ª—É! x1.5 üò≥"
    else:
        multiplier = 2
        result_text = f"{username}, –ø—Ä—è–º–æ –≤ —Ü—ñ–ª—å, –º'—è—á —É –∫—ñ–ª—å—Ü—ñ! x2 üèÄ"

    win = int(amount * multiplier)
    diff = win - amount

    await update_balance(user_id, diff)
    await add_game_stat(user_id, won=(win > amount), game="–±–∞—Å–∫–µ—Ç–±–æ–ª")

    # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    text = result_text + f"\n¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\nüí∏ –°—Ç–∞–≤–∫–∞: {amount} mCoin"
    if win > 0:
        text += f"\nüéâ –í–∏–≥—Ä–∞—à: {win} mCoin"

    balance = await get_balance(user_id)  # ‚úÖ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ
    await send_message_with_balance(message, text, balance)
